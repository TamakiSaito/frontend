// 難易度：下

// 問題1: 配列の各要素に2を掛ける
// 問題： 整数の配列 arr が与えられたとき、各要素に2を掛けた新しい配列を返す関数 doubleArray を作成してください。

// doubleArray([1, 2, 3, 4, 5]);
// // 出力: [2, 4, 6, 8, 10]
// ヒント： map メソッドを使うと便利です。

// 問題2: 配列内の偶数だけを抽出
// 問題： 整数の配列 arr が与えられたとき、偶数だけを抽出した新しい配列を返す関数 filterEvenNumbers を作成してください。

// filterEvenNumbers([1, 2, 3, 4, 5]);
// // 出力: [2, 4]
// ヒント： filter メソッドを使用します。

// 難易度：中

// 問題3: 配列内の合計を計算
// 問題： 整数の配列 arr が与えられたとき、その合計を返す関数 sumArray を作成してください。

// sumArray([1, 2, 3, 4, 5]);
// // 出力: 15
// ヒント： forEach または reduce メソッドを使います。

// 問題4: 配列内の文字列を大文字に変換
// 問題： 文字列の配列 arr が与えられたとき、すべての文字列を大文字に変換した新しい配列を返す関数 toUpperCaseArray を作成してください。

// toUpperCaseArray(["apple", "banana", "cherry"]);
// // 出力: ["APPLE", "BANANA", "CHERRY"]
// ヒント： map メソッドと toUpperCase を組み合わせます。

// 難易度：上

// 問題5: 配列内の重複を削除
// 問題： 整数の配列 arr が与えられたとき、その配列から重複する要素を削除した新しい配列を返す関数 removeDuplicates を作成してください。

// removeDuplicates([1, 2, 2, 3, 4, 4, 5]);
// // 出力: [1, 2, 3, 4, 5]
// ヒント： filter メソッドや Set を使うと便利です。

// 問題6: 配列の各要素を平方して合計を求める
// 問題： 整数の配列 arr が与えられたとき、各要素を平方してその合計を返す関数 sumOfSquares を作成してください。

// sumOfSquares([1, 2, 3, 4]);
// // 出力: 30 (1^2 + 2^2 + 3^2 + 4^2 = 30)
// ヒント： map と reduce を組み合わせて使います。

// 難易度：上

// 問題7: 配列内の最大値と最小値を求める
// 問題： 整数の配列 arr が与えられたとき、最大値と最小値を返す関数 findMinMax を作成してください。

// findMinMax([3, 1, 4, 1, 5, 9, 2]);
// // 出力: { min: 1, max: 9 }
// ヒント： forEach や reduce メソッドを使います。

// 問題8: 配列内で特定の数の出現回数を数える
// 問題： 整数の配列 arr と整数 num が与えられたとき、num の出現回数を返す関数 countOccurrences を作成してください。
// countOccurrences([1, 2, 2, 3, 4, 2], 2);
// // 出力: 3
// ヒント： forEach メソッドまたは filter メソッドを使います。

