{"ast":null,"code":"var _jsxFileName = \"/Users/ishopjapan/Desktop/workspace/react/9-todoApp/app1/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Movies from \"./components/Movies\";\nimport Count from \"./components/Count\";\nimport News from \"./components/Count\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [isMoviesOpen, setIsMoviesOpen] = useState(false);\n  const [isCountOpen, setIsCountOpen] = useState(false);\n  const [isNewsOpen, setIsNewsOpen] = useState(false);\n  const open = target => {\n    if (target === \"movies\") {\n      reset();\n      setIsMoviesOpen(true);\n    } else if (target === \"count\") {\n      reset();\n      setIsCountOpen(true);\n    } else if (target === \"news\") {\n      reset();\n      setIsNewsOpen(true);\n    }\n  };\n  const reset = () => {\n    setIsMoviesOpen(false);\n    setIsCountOpen(false);\n    setIsNewsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => open(\"movies\"),\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => open(\"count\"),\n      children: \"Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isMoviesOpen && /*#__PURE__*/_jsxDEV(Movies, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isCountOpen && /*#__PURE__*/_jsxDEV(Count, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isNewsOpen && /*#__PURE__*/_jsxDEV(News, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RZH36HY5sL8si/SWVAxt/bGrT+8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Movies","Count","News","jsxDEV","_jsxDEV","App","_s","isMoviesOpen","setIsMoviesOpen","isCountOpen","setIsCountOpen","isNewsOpen","setIsNewsOpen","open","target","reset","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ishopjapan/Desktop/workspace/react/9-todoApp/app1/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Movies from \"./components/Movies\";\nimport Count from \"./components/Count\";\nimport News from \"./components/Count\";\n\nexport default function App() {\n  const [isMoviesOpen, setIsMoviesOpen] = useState(false);\n  const [isCountOpen, setIsCountOpen] = useState(false);\n  const [isNewsOpen, setIsNewsOpen] = useState(false);\n\n  const open = (target) => {\n    if (target === \"movies\") {\n      reset();\n      setIsMoviesOpen(true);\n    } else if (target === \"count\") {\n      reset();\n      setIsCountOpen(true);\n    } else if (target === \"news\"){\n      reset();\n      setIsNewsOpen(true);\n    }\n  };\n\n  const reset = () => {\n    setIsMoviesOpen(false);\n    setIsCountOpen(false);\n    setIsNewsOpen(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => open(\"movies\")}>Movies</button>\n      <button onClick={() => open(\"count\")}>Count</button>\n      <div>{isMoviesOpen && <Movies />}</div>\n      <div>{isCountOpen && <Count />}</div>\n      <div>{isNewsOpen && <News />}</div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,IAAI,GAAIC,MAAM,IAAK;IACvB,IAAIA,MAAM,KAAK,QAAQ,EAAE;MACvBC,KAAK,CAAC,CAAC;MACPP,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM,IAAIM,MAAM,KAAK,OAAO,EAAE;MAC7BC,KAAK,CAAC,CAAC;MACPL,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM,IAAII,MAAM,KAAK,MAAM,EAAC;MAC3BC,KAAK,CAAC,CAAC;MACPH,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,MAAMG,KAAK,GAAGA,CAAA,KAAM;IAClBP,eAAe,CAAC,KAAK,CAAC;IACtBE,cAAc,CAAC,KAAK,CAAC;IACrBE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACER,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAML,IAAI,CAAC,QAAQ,CAAE;MAAAI,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtDlB,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAML,IAAI,CAAC,OAAO,CAAE;MAAAI,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDlB,OAAA;MAAAa,QAAA,EAAMV,YAAY,iBAAIH,OAAA,CAACJ,MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvClB,OAAA;MAAAa,QAAA,EAAMR,WAAW,iBAAIL,OAAA,CAACH,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrClB,OAAA;MAAAa,QAAA,EAAMN,UAAU,iBAAIP,OAAA,CAACF,IAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAAChB,EAAA,CAjCuBD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}